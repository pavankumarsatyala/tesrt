pipeline {

  environment {
    PROJECT = "gopay-playground"
    APP_NAME = "gceme"
    FE_SVC_NAME = "${APP_NAME}-frontend"
    CLUSTER = "jenkins-cd"
    CLUSTER_ZONE = "us-east1-d"
    IMAGE_TAG = "gcr.io/${PROJECT}/${APP_NAME}:${env.BRANCH_NAME}.${env.BUILD_NUMBER}"
    JENKINS_CRED = "${PROJECT}"
  }

  agent {
    kubernetes {
      label 'sample-app'
      defaultContainer 'jnlp'
      yaml """
apiVersion: v1
kind: Pod
metadata:
labels:
  component: ci
spec:
  # Use service account that can deploy to all namespaces
  serviceAccountName: cd-jenkins
  containers:
  - name: golang
    image: golang:1.10
    command:
    - cat
    tty: true
  - name: gcloud
    image: quay.io/evl.ms/gcloud-helm:338.0.0
    command:
    - cat
    tty: true
  - name: kubectl
    image: quay.io/evl.ms/gcloud-helm:338.0.0
    command:
    - cat
    tty: true
"""
}
  }
  stages {
   
    stage('Build and push image with Container Builder') {
      steps {
        container('gcloud') {
          sh "PYTHONUNBUFFERED=1 gcloud builds submit -t gcr.io/gopay-playground/testing111 ."
        }
      }
    }
    
    stage(“deploy”) {
      steps {
        container(“kubectl”) {
            sh  “””
             helm ls
             gcloud container clusters get-credentials cluster-1 --zone us-central1-c --project gopay-playground
             kubectl get pods —namespace default
             helm install sampleapp1 sampleapp/ —namespace default
             helm ls
             kubectl get pods —namespace default
             “””

    
  }
}

